@using AppCurso.Models
@model BusCLS
@{
    ViewBag.Title = "Edit";
    List<SelectListItem> listaTipoBus = (List<SelectListItem>)ViewBag.listaTipoBus;
    List<SelectListItem> listaMarca = (List<SelectListItem>)ViewBag.listaMarca;
    List<SelectListItem> listaModelo = (List<SelectListItem>)ViewBag.listaModelo;
    List<SelectListItem> listaSucursal = (List<SelectListItem>)ViewBag.listaSucursal;
}

<h2>Edit</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Edit", "Bus", FormMethod.Post, new { @id = "frmEditar" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>BusCLS</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div>
                @Html.LabelFor(p => p.idBus)
                @Html.TextBoxFor(p => p.idBus, new { @class = "form-control", @readOnly = true })
                @Html.ValidationMessage("idBus", new { @class = "text-danger" })
            </div>
       
            <div class="form-group">
                @Html.LabelFor(model => model.idSucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idSucursal", listaSucursal, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.idModelo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idModelo", listaModelo, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idModelo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idTipobus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idTipobus", listaTipoBus, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idTipobus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.placa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
                    @if (Model != null && Model.mensajeError != null)
                    {
                        @Html.Label(Model.mensajeError, new { @class = "text-danger" })
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaCompra, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaCompra, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaCompra, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.numeroFilas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numeroFilas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numeroFilas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.numeroColumnas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numeroColumnas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numeroColumnas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idMarca, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idMarca", listaMarca, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idMarca, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                        Editar
                    </button>
                    @Html.ActionLink("Regresa", "Index", "Bus", new { @class = "btn btn-danger" })
                </div>
            </div>

        </div>
        }
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Desea guardar los cambios?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div style="padding:1em">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" onclick="Aceptar()" class="btn btn-primary">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function Aceptar() {
        var frmEditar = document.getElementById("frmEditar");
        frmEditar.submit();
    }
</script>

